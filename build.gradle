plugins {
    id 'java-library'
    id 'maven-publish'
}

group = 'dev.alexengrig.sample'
version = '0-SAMPLE'

java {
    sourceCompatibility = '17'
    withSourcesJar()
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

jar {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor': 'Alexengrig Dev.'
        )
    }
}

repositories {
    mavenCentral()
}

ext {
    set('mapstructVersion', '1.5.3.Final')
    set('mapstructLombokVersion', '0.2.0')
    set('lombokVersion', '1.18.24')
    set('springBootVersion', '3.0.1')
}

dependencies {
    api "org.mapstruct:mapstruct:${mapstructVersion}"
    api "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    api "org.projectlombok:lombok-mapstruct-binding:${mapstructLombokVersion}"

    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor "org.projectlombok:lombok-mapstruct-binding:${mapstructLombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
}

test {
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            def repoUrl = System.getenv('YOUR_REPO_URL')
            if (project.version.endsWith('SNAPSHOT')) {
                url = "${repoUrl}/repository/prefix/for/snapshots"
            } else {
                url = "${repoUrl}/repository/prefix/for/releases"
            }
            credentials {
                username = System.getenv('YOUR_REPO_USERNAME')
                password = System.getenv('YOUR_REPO_PASSWORD')
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from project.components.java
        }
    }
}
